services:

  reverse-proxy:
    image: traefik:v3
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      # - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  service:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: service
    command: ["service"]
    ports:
      - 8000:8000
    env_file:
      - development.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=PathPrefix(`/docs`, `/v1`, `/openapi.json`)"
    depends_on:
      - db

  db:
    image: postgres:16
    container_name: database
    expose:
      - 5432
    env_file:
      - development.env

  worker:
    build:
      context: ./
      dockerfile: Dockerfile
    command: ["worker", "-E -Ofair --loglevel=debug --autoscale=10,3 --max-tasks-per-child=5"]  
    container_name: worker
    env_file:
      - development.env
    depends_on:
      - service
      - redis

  dashboard:
    build:
      context: ./
      dockerfile: Dockerfile
    command: ["dashboard"]
    container_name: dashboard
    ports:
      - 5555:5555
    env_file:
      - development.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=PathPrefix(`/`)"
    depends_on:
      - service
      - redis
      - worker

  redis:
    image: redis:7
    container_name: redis
